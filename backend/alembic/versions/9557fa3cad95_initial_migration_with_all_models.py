"""Initial migration with all models

Revision ID: 9557fa3cad95
Revises: 
Create Date: 2025-07-29 14:11:00.299194

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9557fa3cad95'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('node_types',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('display_name', sa.String(length=100), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('documentation_url', sa.String(length=500), nullable=True),
    sa.Column('icon_url', sa.String(length=500), nullable=True),
    sa.Column('color', sa.String(length=7), nullable=True),
    sa.Column('version', sa.String(length=20), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_beta', sa.Boolean(), nullable=False),
    sa.Column('input_schema', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('output_schema', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('settings_schema', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('supports_webhook', sa.Boolean(), nullable=False),
    sa.Column('supports_polling', sa.Boolean(), nullable=False),
    sa.Column('supports_batch', sa.Boolean(), nullable=False),
    sa.Column('is_taiwan_service', sa.Boolean(), nullable=False),
    sa.Column('service_provider', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_node_types'))
    )
    op.create_index(op.f('ix_node_types_category'), 'node_types', ['category'], unique=False)
    op.create_index(op.f('ix_node_types_id'), 'node_types', ['id'], unique=False)
    op.create_index(op.f('ix_node_types_name'), 'node_types', ['name'], unique=True)
    op.create_table('taiwan_government_data',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('dataset_id', sa.String(length=100), nullable=False),
    sa.Column('dataset_name', sa.String(length=200), nullable=False),
    sa.Column('agency', sa.String(length=100), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('api_endpoint', sa.String(length=500), nullable=False),
    sa.Column('api_key_required', sa.Boolean(), nullable=False),
    sa.Column('api_format', sa.String(length=20), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('update_frequency', sa.String(length=50), nullable=True),
    sa.Column('data_fields', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('last_accessed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_taiwan_government_data'))
    )
    op.create_index(op.f('ix_taiwan_government_data_agency'), 'taiwan_government_data', ['agency'], unique=False)
    op.create_index(op.f('ix_taiwan_government_data_category'), 'taiwan_government_data', ['category'], unique=False)
    op.create_index(op.f('ix_taiwan_government_data_dataset_id'), 'taiwan_government_data', ['dataset_id'], unique=True)
    op.create_index(op.f('ix_taiwan_government_data_id'), 'taiwan_government_data', ['id'], unique=False)
    op.create_table('taiwan_services',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('service_name', sa.String(length=100), nullable=False),
    sa.Column('service_type', sa.String(length=50), nullable=False),
    sa.Column('display_name', sa.String(length=100), nullable=False),
    sa.Column('provider', sa.String(length=100), nullable=False),
    sa.Column('api_endpoint', sa.String(length=500), nullable=False),
    sa.Column('api_version', sa.String(length=20), nullable=True),
    sa.Column('api_key_encrypted', sa.Text(), nullable=True),
    sa.Column('auth_type', sa.String(length=50), nullable=False),
    sa.Column('auth_config', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_sandbox', sa.Boolean(), nullable=False),
    sa.Column('configuration', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('rate_limit', sa.Integer(), nullable=True),
    sa.Column('health_check_url', sa.String(length=500), nullable=True),
    sa.Column('last_health_check', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_healthy', sa.Boolean(), nullable=False),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('error_count', sa.Integer(), nullable=False),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_taiwan_services'))
    )
    op.create_index(op.f('ix_taiwan_services_id'), 'taiwan_services', ['id'], unique=False)
    op.create_index(op.f('ix_taiwan_services_service_name'), 'taiwan_services', ['service_name'], unique=True)
    op.create_index(op.f('ix_taiwan_services_service_type'), 'taiwan_services', ['service_type'], unique=False)
    op.create_table('taiwan_transport_data',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('service_type', sa.String(length=50), nullable=False),
    sa.Column('service_name', sa.String(length=100), nullable=False),
    sa.Column('api_endpoint', sa.String(length=500), nullable=False),
    sa.Column('api_key_encrypted', sa.Text(), nullable=True),
    sa.Column('auth_type', sa.String(length=50), nullable=False),
    sa.Column('data_types', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('configuration', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('rate_limit', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('health_status', sa.String(length=20), nullable=False),
    sa.Column('last_health_check', sa.DateTime(timezone=True), nullable=True),
    sa.Column('request_count', sa.Integer(), nullable=False),
    sa.Column('error_count', sa.Integer(), nullable=False),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_taiwan_transport_data'))
    )
    op.create_index(op.f('ix_taiwan_transport_data_id'), 'taiwan_transport_data', ['id'], unique=False)
    op.create_index(op.f('ix_taiwan_transport_data_service_type'), 'taiwan_transport_data', ['service_type'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('avatar', sa.String(length=500), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('email_verified', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('api_keys',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('key_name', sa.String(length=100), nullable=False),
    sa.Column('key_hash', sa.String(length=255), nullable=False),
    sa.Column('key_prefix', sa.String(length=10), nullable=False),
    sa.Column('permissions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_used_ip', sa.String(length=45), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_api_keys_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_api_keys')),
    sa.UniqueConstraint('key_hash', name=op.f('uq_api_keys_key_hash'))
    )
    op.create_index(op.f('ix_api_keys_id'), 'api_keys', ['id'], unique=False)
    op.create_table('audit_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('resource_type', sa.String(length=50), nullable=False),
    sa.Column('resource_id', sa.String(length=50), nullable=True),
    sa.Column('old_values', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('new_values', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('request_id', sa.String(length=36), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_audit_logs_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_audit_logs'))
    )
    op.create_index(op.f('ix_audit_logs_action'), 'audit_logs', ['action'], unique=False)
    op.create_index(op.f('ix_audit_logs_created_at'), 'audit_logs', ['created_at'], unique=False)
    op.create_index(op.f('ix_audit_logs_id'), 'audit_logs', ['id'], unique=False)
    op.create_index(op.f('ix_audit_logs_request_id'), 'audit_logs', ['request_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_resource_id'), 'audit_logs', ['resource_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_resource_type'), 'audit_logs', ['resource_type'], unique=False)
    op.create_table('refresh_tokens',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('token', sa.String(length=255), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_revoked', sa.Boolean(), nullable=False),
    sa.Column('created_ip', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('revoked_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_refresh_tokens_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_refresh_tokens'))
    )
    op.create_index(op.f('ix_refresh_tokens_id'), 'refresh_tokens', ['id'], unique=False)
    op.create_index(op.f('ix_refresh_tokens_token'), 'refresh_tokens', ['token'], unique=True)
    op.create_index(op.f('ix_refresh_tokens_user_id'), 'refresh_tokens', ['user_id'], unique=False)
    op.create_table('system_settings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('setting_key', sa.String(length=100), nullable=False),
    sa.Column('setting_value', sa.Text(), nullable=True),
    sa.Column('setting_type', sa.String(length=20), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('is_readonly', sa.Boolean(), nullable=False),
    sa.Column('validation_rule', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], name=op.f('fk_system_settings_updated_by_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_system_settings'))
    )
    op.create_index(op.f('ix_system_settings_category'), 'system_settings', ['category'], unique=False)
    op.create_index(op.f('ix_system_settings_id'), 'system_settings', ['id'], unique=False)
    op.create_index(op.f('ix_system_settings_setting_key'), 'system_settings', ['setting_key'], unique=True)
    op.create_table('taiwan_payment_configs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('provider', sa.Enum('LINE_PAY', 'ECPAY', 'NEWEBPAY', 'SPGATEWAY', 'TAPPAY', 'ESUNBANK', name='paymentprovider'), nullable=False),
    sa.Column('config_name', sa.String(length=100), nullable=False),
    sa.Column('merchant_id', sa.String(length=100), nullable=False),
    sa.Column('api_key_encrypted', sa.Text(), nullable=False),
    sa.Column('api_secret_encrypted', sa.Text(), nullable=True),
    sa.Column('is_sandbox', sa.Boolean(), nullable=False),
    sa.Column('api_endpoint', sa.String(length=500), nullable=True),
    sa.Column('supported_methods', postgresql.ARRAY(sa.Enum('CREDIT_CARD', 'ATM', 'CVS', 'BARCODE', 'APPLE_PAY', 'GOOGLE_PAY', 'SAMSUNG_PAY', name='paymentmethod')), nullable=False),
    sa.Column('configuration', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('transaction_count', sa.Integer(), nullable=False),
    sa.Column('total_amount', sa.Integer(), nullable=False),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_taiwan_payment_configs_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_taiwan_payment_configs'))
    )
    op.create_index(op.f('ix_taiwan_payment_configs_id'), 'taiwan_payment_configs', ['id'], unique=False)
    op.create_index(op.f('ix_taiwan_payment_configs_provider'), 'taiwan_payment_configs', ['provider'], unique=False)
    op.create_index(op.f('ix_taiwan_payment_configs_user_id'), 'taiwan_payment_configs', ['user_id'], unique=False)
    op.create_table('user_preferences',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('theme', sa.String(length=20), nullable=False),
    sa.Column('sidebar_collapsed', sa.Boolean(), nullable=False),
    sa.Column('email_notifications', sa.Boolean(), nullable=False),
    sa.Column('workflow_notifications', sa.Boolean(), nullable=False),
    sa.Column('execution_notifications', sa.Boolean(), nullable=False),
    sa.Column('marketing_emails', sa.Boolean(), nullable=False),
    sa.Column('auto_save_workflows', sa.Boolean(), nullable=False),
    sa.Column('default_workflow_privacy', sa.String(length=20), nullable=False),
    sa.Column('additional_settings', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_preferences_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_preferences')),
    sa.UniqueConstraint('user_id', name=op.f('uq_user_preferences_user_id'))
    )
    op.create_index(op.f('ix_user_preferences_id'), 'user_preferences', ['id'], unique=False)
    op.create_table('user_profiles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('website', sa.String(length=500), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=False),
    sa.Column('language', sa.String(length=10), nullable=False),
    sa.Column('workflow_count', sa.Integer(), nullable=False),
    sa.Column('execution_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_profiles_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_profiles')),
    sa.UniqueConstraint('user_id', name=op.f('uq_user_profiles_user_id'))
    )
    op.create_index(op.f('ix_user_profiles_id'), 'user_profiles', ['id'], unique=False)
    op.create_table('workflow_templates',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('thumbnail_url', sa.String(length=500), nullable=True),
    sa.Column('nodes', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('edges', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('settings', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('author_id', sa.UUID(), nullable=True),
    sa.Column('is_official', sa.Boolean(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Float(), nullable=False),
    sa.Column('rating_count', sa.Integer(), nullable=False),
    sa.Column('version', sa.String(length=20), nullable=False),
    sa.Column('min_platform_version', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], name=op.f('fk_workflow_templates_author_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_workflow_templates'))
    )
    op.create_index(op.f('ix_workflow_templates_category'), 'workflow_templates', ['category'], unique=False)
    op.create_index(op.f('ix_workflow_templates_created_at'), 'workflow_templates', ['created_at'], unique=False)
    op.create_index(op.f('ix_workflow_templates_id'), 'workflow_templates', ['id'], unique=False)
    op.create_index(op.f('ix_workflow_templates_name'), 'workflow_templates', ['name'], unique=False)
    op.create_table('workflows',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'ACTIVE', 'INACTIVE', 'ARCHIVED', name='workflowstatus'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('nodes', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('edges', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('settings', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('execution_count', sa.Integer(), nullable=False),
    sa.Column('success_count', sa.Integer(), nullable=False),
    sa.Column('failure_count', sa.Integer(), nullable=False),
    sa.Column('average_duration', sa.Float(), nullable=True),
    sa.Column('n8n_workflow_id', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_executed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_workflows_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_workflows')),
    sa.UniqueConstraint('n8n_workflow_id', name=op.f('uq_workflows_n8n_workflow_id'))
    )
    op.create_index(op.f('ix_workflows_category'), 'workflows', ['category'], unique=False)
    op.create_index(op.f('ix_workflows_created_at'), 'workflows', ['created_at'], unique=False)
    op.create_index(op.f('ix_workflows_id'), 'workflows', ['id'], unique=False)
    op.create_index(op.f('ix_workflows_is_active'), 'workflows', ['is_active'], unique=False)
    op.create_index(op.f('ix_workflows_last_executed_at'), 'workflows', ['last_executed_at'], unique=False)
    op.create_index(op.f('ix_workflows_name'), 'workflows', ['name'], unique=False)
    op.create_index(op.f('ix_workflows_status'), 'workflows', ['status'], unique=False)
    op.create_index(op.f('ix_workflows_user_id'), 'workflows', ['user_id'], unique=False)
    op.create_table('nodes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('workflow_id', sa.UUID(), nullable=False),
    sa.Column('node_type_id', sa.UUID(), nullable=False),
    sa.Column('node_key', sa.String(length=100), nullable=False),
    sa.Column('node_name', sa.String(length=100), nullable=True),
    sa.Column('position_x', sa.Float(), nullable=False),
    sa.Column('position_y', sa.Float(), nullable=False),
    sa.Column('configuration', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('input_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_disabled', sa.Boolean(), nullable=False),
    sa.Column('execution_count', sa.Integer(), nullable=False),
    sa.Column('success_count', sa.Integer(), nullable=False),
    sa.Column('failure_count', sa.Integer(), nullable=False),
    sa.Column('average_duration', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['node_type_id'], ['node_types.id'], name=op.f('fk_nodes_node_type_id_node_types')),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.id'], name=op.f('fk_nodes_workflow_id_workflows')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_nodes'))
    )
    op.create_index(op.f('ix_nodes_id'), 'nodes', ['id'], unique=False)
    op.create_index(op.f('ix_nodes_node_key'), 'nodes', ['node_key'], unique=False)
    op.create_index(op.f('ix_nodes_node_type_id'), 'nodes', ['node_type_id'], unique=False)
    op.create_index(op.f('ix_nodes_workflow_id'), 'nodes', ['workflow_id'], unique=False)
    op.create_table('webhook_endpoints',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('workflow_id', sa.UUID(), nullable=False),
    sa.Column('endpoint_id', sa.String(length=36), nullable=False),
    sa.Column('endpoint_url', sa.String(length=500), nullable=False),
    sa.Column('secret_key', sa.String(length=255), nullable=True),
    sa.Column('method', sa.String(length=10), nullable=False),
    sa.Column('content_type', sa.String(length=100), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('trigger_count', sa.Integer(), nullable=False),
    sa.Column('last_triggered_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_trigger_ip', sa.String(length=45), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_webhook_endpoints_user_id_users')),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.id'], name=op.f('fk_webhook_endpoints_workflow_id_workflows')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_webhook_endpoints')),
    sa.UniqueConstraint('endpoint_url', name=op.f('uq_webhook_endpoints_endpoint_url'))
    )
    op.create_index(op.f('ix_webhook_endpoints_endpoint_id'), 'webhook_endpoints', ['endpoint_id'], unique=True)
    op.create_index(op.f('ix_webhook_endpoints_id'), 'webhook_endpoints', ['id'], unique=False)
    op.create_index(op.f('ix_webhook_endpoints_user_id'), 'webhook_endpoints', ['user_id'], unique=False)
    op.create_index(op.f('ix_webhook_endpoints_workflow_id'), 'webhook_endpoints', ['workflow_id'], unique=False)
    op.create_table('workflow_executions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('workflow_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('execution_id', sa.String(length=36), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'RUNNING', 'SUCCESS', 'FAILED', 'CANCELLED', 'TIMEOUT', name='executionstatus'), nullable=False),
    sa.Column('trigger_type', sa.String(length=50), nullable=True),
    sa.Column('trigger_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('result_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('error_details', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('nodes_executed', sa.Integer(), nullable=False),
    sa.Column('nodes_successful', sa.Integer(), nullable=False),
    sa.Column('nodes_failed', sa.Integer(), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('finished_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.Column('n8n_execution_id', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_workflow_executions_user_id_users')),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.id'], name=op.f('fk_workflow_executions_workflow_id_workflows')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_workflow_executions'))
    )
    op.create_index(op.f('ix_workflow_executions_execution_id'), 'workflow_executions', ['execution_id'], unique=True)
    op.create_index(op.f('ix_workflow_executions_finished_at'), 'workflow_executions', ['finished_at'], unique=False)
    op.create_index(op.f('ix_workflow_executions_id'), 'workflow_executions', ['id'], unique=False)
    op.create_index(op.f('ix_workflow_executions_started_at'), 'workflow_executions', ['started_at'], unique=False)
    op.create_index(op.f('ix_workflow_executions_status'), 'workflow_executions', ['status'], unique=False)
    op.create_index(op.f('ix_workflow_executions_trigger_type'), 'workflow_executions', ['trigger_type'], unique=False)
    op.create_index(op.f('ix_workflow_executions_user_id'), 'workflow_executions', ['user_id'], unique=False)
    op.create_index(op.f('ix_workflow_executions_workflow_id'), 'workflow_executions', ['workflow_id'], unique=False)
    op.create_table('workflow_versions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('workflow_id', sa.UUID(), nullable=False),
    sa.Column('version_number', sa.Integer(), nullable=False),
    sa.Column('version_name', sa.String(length=100), nullable=True),
    sa.Column('changelog', sa.Text(), nullable=True),
    sa.Column('nodes', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('edges', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('settings', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_current', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name=op.f('fk_workflow_versions_created_by_users')),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.id'], name=op.f('fk_workflow_versions_workflow_id_workflows')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_workflow_versions'))
    )
    op.create_index(op.f('ix_workflow_versions_created_at'), 'workflow_versions', ['created_at'], unique=False)
    op.create_index(op.f('ix_workflow_versions_id'), 'workflow_versions', ['id'], unique=False)
    op.create_index(op.f('ix_workflow_versions_workflow_id'), 'workflow_versions', ['workflow_id'], unique=False)
    op.create_table('payment_records',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('workflow_execution_id', sa.UUID(), nullable=False),
    sa.Column('service_type', sa.String(length=50), nullable=False),
    sa.Column('transaction_id', sa.String(length=100), nullable=False),
    sa.Column('merchant_order_id', sa.String(length=100), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('product_name', sa.String(length=200), nullable=True),
    sa.Column('product_description', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('external_transaction_id', sa.String(length=100), nullable=True),
    sa.Column('external_status', sa.String(length=50), nullable=True),
    sa.Column('external_response', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('paid_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['workflow_execution_id'], ['workflow_executions.id'], name=op.f('fk_payment_records_workflow_execution_id_workflow_executions')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_payment_records'))
    )
    op.create_index(op.f('ix_payment_records_created_at'), 'payment_records', ['created_at'], unique=False)
    op.create_index(op.f('ix_payment_records_external_transaction_id'), 'payment_records', ['external_transaction_id'], unique=False)
    op.create_index(op.f('ix_payment_records_id'), 'payment_records', ['id'], unique=False)
    op.create_index(op.f('ix_payment_records_merchant_order_id'), 'payment_records', ['merchant_order_id'], unique=False)
    op.create_index(op.f('ix_payment_records_service_type'), 'payment_records', ['service_type'], unique=False)
    op.create_index(op.f('ix_payment_records_status'), 'payment_records', ['status'], unique=False)
    op.create_index(op.f('ix_payment_records_transaction_id'), 'payment_records', ['transaction_id'], unique=True)
    op.create_index(op.f('ix_payment_records_workflow_execution_id'), 'payment_records', ['workflow_execution_id'], unique=False)
    op.create_table('taiwan_payment_transactions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('config_id', sa.UUID(), nullable=False),
    sa.Column('workflow_execution_id', sa.UUID(), nullable=True),
    sa.Column('transaction_id', sa.String(length=100), nullable=False),
    sa.Column('merchant_order_id', sa.String(length=100), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('product_name', sa.String(length=200), nullable=False),
    sa.Column('product_description', sa.Text(), nullable=True),
    sa.Column('product_url', sa.String(length=500), nullable=True),
    sa.Column('payment_method', sa.Enum('CREDIT_CARD', 'ATM', 'CVS', 'BARCODE', 'APPLE_PAY', 'GOOGLE_PAY', 'SAMSUNG_PAY', name='paymentmethod'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'SUCCESS', 'FAILED', 'CANCELLED', 'REFUNDED', 'PARTIAL_REFUNDED', name='paymentstatus'), nullable=False),
    sa.Column('buyer_name', sa.String(length=100), nullable=True),
    sa.Column('buyer_email', sa.String(length=255), nullable=True),
    sa.Column('buyer_phone', sa.String(length=20), nullable=True),
    sa.Column('external_transaction_id', sa.String(length=100), nullable=True),
    sa.Column('external_status', sa.String(length=50), nullable=True),
    sa.Column('external_response', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('return_url', sa.String(length=500), nullable=True),
    sa.Column('notify_url', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('paid_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('expired_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['config_id'], ['taiwan_payment_configs.id'], name=op.f('fk_taiwan_payment_transactions_config_id_taiwan_payment_configs')),
    sa.ForeignKeyConstraint(['workflow_execution_id'], ['workflow_executions.id'], name=op.f('fk_taiwan_payment_transactions_workflow_execution_id_workflow_executions')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_taiwan_payment_transactions'))
    )
    op.create_index(op.f('ix_taiwan_payment_transactions_config_id'), 'taiwan_payment_transactions', ['config_id'], unique=False)
    op.create_index(op.f('ix_taiwan_payment_transactions_created_at'), 'taiwan_payment_transactions', ['created_at'], unique=False)
    op.create_index(op.f('ix_taiwan_payment_transactions_external_transaction_id'), 'taiwan_payment_transactions', ['external_transaction_id'], unique=False)
    op.create_index(op.f('ix_taiwan_payment_transactions_id'), 'taiwan_payment_transactions', ['id'], unique=False)
    op.create_index(op.f('ix_taiwan_payment_transactions_merchant_order_id'), 'taiwan_payment_transactions', ['merchant_order_id'], unique=False)
    op.create_index(op.f('ix_taiwan_payment_transactions_paid_at'), 'taiwan_payment_transactions', ['paid_at'], unique=False)
    op.create_index(op.f('ix_taiwan_payment_transactions_payment_method'), 'taiwan_payment_transactions', ['payment_method'], unique=False)
    op.create_index(op.f('ix_taiwan_payment_transactions_status'), 'taiwan_payment_transactions', ['status'], unique=False)
    op.create_index(op.f('ix_taiwan_payment_transactions_transaction_id'), 'taiwan_payment_transactions', ['transaction_id'], unique=True)
    op.create_index(op.f('ix_taiwan_payment_transactions_workflow_execution_id'), 'taiwan_payment_transactions', ['workflow_execution_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_taiwan_payment_transactions_workflow_execution_id'), table_name='taiwan_payment_transactions')
    op.drop_index(op.f('ix_taiwan_payment_transactions_transaction_id'), table_name='taiwan_payment_transactions')
    op.drop_index(op.f('ix_taiwan_payment_transactions_status'), table_name='taiwan_payment_transactions')
    op.drop_index(op.f('ix_taiwan_payment_transactions_payment_method'), table_name='taiwan_payment_transactions')
    op.drop_index(op.f('ix_taiwan_payment_transactions_paid_at'), table_name='taiwan_payment_transactions')
    op.drop_index(op.f('ix_taiwan_payment_transactions_merchant_order_id'), table_name='taiwan_payment_transactions')
    op.drop_index(op.f('ix_taiwan_payment_transactions_id'), table_name='taiwan_payment_transactions')
    op.drop_index(op.f('ix_taiwan_payment_transactions_external_transaction_id'), table_name='taiwan_payment_transactions')
    op.drop_index(op.f('ix_taiwan_payment_transactions_created_at'), table_name='taiwan_payment_transactions')
    op.drop_index(op.f('ix_taiwan_payment_transactions_config_id'), table_name='taiwan_payment_transactions')
    op.drop_table('taiwan_payment_transactions')
    op.drop_index(op.f('ix_payment_records_workflow_execution_id'), table_name='payment_records')
    op.drop_index(op.f('ix_payment_records_transaction_id'), table_name='payment_records')
    op.drop_index(op.f('ix_payment_records_status'), table_name='payment_records')
    op.drop_index(op.f('ix_payment_records_service_type'), table_name='payment_records')
    op.drop_index(op.f('ix_payment_records_merchant_order_id'), table_name='payment_records')
    op.drop_index(op.f('ix_payment_records_id'), table_name='payment_records')
    op.drop_index(op.f('ix_payment_records_external_transaction_id'), table_name='payment_records')
    op.drop_index(op.f('ix_payment_records_created_at'), table_name='payment_records')
    op.drop_table('payment_records')
    op.drop_index(op.f('ix_workflow_versions_workflow_id'), table_name='workflow_versions')
    op.drop_index(op.f('ix_workflow_versions_id'), table_name='workflow_versions')
    op.drop_index(op.f('ix_workflow_versions_created_at'), table_name='workflow_versions')
    op.drop_table('workflow_versions')
    op.drop_index(op.f('ix_workflow_executions_workflow_id'), table_name='workflow_executions')
    op.drop_index(op.f('ix_workflow_executions_user_id'), table_name='workflow_executions')
    op.drop_index(op.f('ix_workflow_executions_trigger_type'), table_name='workflow_executions')
    op.drop_index(op.f('ix_workflow_executions_status'), table_name='workflow_executions')
    op.drop_index(op.f('ix_workflow_executions_started_at'), table_name='workflow_executions')
    op.drop_index(op.f('ix_workflow_executions_id'), table_name='workflow_executions')
    op.drop_index(op.f('ix_workflow_executions_finished_at'), table_name='workflow_executions')
    op.drop_index(op.f('ix_workflow_executions_execution_id'), table_name='workflow_executions')
    op.drop_table('workflow_executions')
    op.drop_index(op.f('ix_webhook_endpoints_workflow_id'), table_name='webhook_endpoints')
    op.drop_index(op.f('ix_webhook_endpoints_user_id'), table_name='webhook_endpoints')
    op.drop_index(op.f('ix_webhook_endpoints_id'), table_name='webhook_endpoints')
    op.drop_index(op.f('ix_webhook_endpoints_endpoint_id'), table_name='webhook_endpoints')
    op.drop_table('webhook_endpoints')
    op.drop_index(op.f('ix_nodes_workflow_id'), table_name='nodes')
    op.drop_index(op.f('ix_nodes_node_type_id'), table_name='nodes')
    op.drop_index(op.f('ix_nodes_node_key'), table_name='nodes')
    op.drop_index(op.f('ix_nodes_id'), table_name='nodes')
    op.drop_table('nodes')
    op.drop_index(op.f('ix_workflows_user_id'), table_name='workflows')
    op.drop_index(op.f('ix_workflows_status'), table_name='workflows')
    op.drop_index(op.f('ix_workflows_name'), table_name='workflows')
    op.drop_index(op.f('ix_workflows_last_executed_at'), table_name='workflows')
    op.drop_index(op.f('ix_workflows_is_active'), table_name='workflows')
    op.drop_index(op.f('ix_workflows_id'), table_name='workflows')
    op.drop_index(op.f('ix_workflows_created_at'), table_name='workflows')
    op.drop_index(op.f('ix_workflows_category'), table_name='workflows')
    op.drop_table('workflows')
    op.drop_index(op.f('ix_workflow_templates_name'), table_name='workflow_templates')
    op.drop_index(op.f('ix_workflow_templates_id'), table_name='workflow_templates')
    op.drop_index(op.f('ix_workflow_templates_created_at'), table_name='workflow_templates')
    op.drop_index(op.f('ix_workflow_templates_category'), table_name='workflow_templates')
    op.drop_table('workflow_templates')
    op.drop_index(op.f('ix_user_profiles_id'), table_name='user_profiles')
    op.drop_table('user_profiles')
    op.drop_index(op.f('ix_user_preferences_id'), table_name='user_preferences')
    op.drop_table('user_preferences')
    op.drop_index(op.f('ix_taiwan_payment_configs_user_id'), table_name='taiwan_payment_configs')
    op.drop_index(op.f('ix_taiwan_payment_configs_provider'), table_name='taiwan_payment_configs')
    op.drop_index(op.f('ix_taiwan_payment_configs_id'), table_name='taiwan_payment_configs')
    op.drop_table('taiwan_payment_configs')
    op.drop_index(op.f('ix_system_settings_setting_key'), table_name='system_settings')
    op.drop_index(op.f('ix_system_settings_id'), table_name='system_settings')
    op.drop_index(op.f('ix_system_settings_category'), table_name='system_settings')
    op.drop_table('system_settings')
    op.drop_index(op.f('ix_refresh_tokens_user_id'), table_name='refresh_tokens')
    op.drop_index(op.f('ix_refresh_tokens_token'), table_name='refresh_tokens')
    op.drop_index(op.f('ix_refresh_tokens_id'), table_name='refresh_tokens')
    op.drop_table('refresh_tokens')
    op.drop_index(op.f('ix_audit_logs_resource_type'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_resource_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_request_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_created_at'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_action'), table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_index(op.f('ix_api_keys_id'), table_name='api_keys')
    op.drop_table('api_keys')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_taiwan_transport_data_service_type'), table_name='taiwan_transport_data')
    op.drop_index(op.f('ix_taiwan_transport_data_id'), table_name='taiwan_transport_data')
    op.drop_table('taiwan_transport_data')
    op.drop_index(op.f('ix_taiwan_services_service_type'), table_name='taiwan_services')
    op.drop_index(op.f('ix_taiwan_services_service_name'), table_name='taiwan_services')
    op.drop_index(op.f('ix_taiwan_services_id'), table_name='taiwan_services')
    op.drop_table('taiwan_services')
    op.drop_index(op.f('ix_taiwan_government_data_id'), table_name='taiwan_government_data')
    op.drop_index(op.f('ix_taiwan_government_data_dataset_id'), table_name='taiwan_government_data')
    op.drop_index(op.f('ix_taiwan_government_data_category'), table_name='taiwan_government_data')
    op.drop_index(op.f('ix_taiwan_government_data_agency'), table_name='taiwan_government_data')
    op.drop_table('taiwan_government_data')
    op.drop_index(op.f('ix_node_types_name'), table_name='node_types')
    op.drop_index(op.f('ix_node_types_id'), table_name='node_types')
    op.drop_index(op.f('ix_node_types_category'), table_name='node_types')
    op.drop_table('node_types')
    # ### end Alembic commands ###
