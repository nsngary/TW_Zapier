# 台灣在地化流程自動化平台 - 前端生產環境 Dockerfile

# 建置階段
FROM node:18-alpine as builder

WORKDIR /app

# 安裝建置依賴
RUN apk add --no-cache git

# 複製 package 檔案
COPY package*.json ./

# 安裝依賴
RUN npm ci --only=production=false

# 複製原始碼
COPY . .

# 建置應用
RUN npm run build

# 生產階段
FROM nginx:alpine

# 安裝額外工具
RUN apk add --no-cache curl

# 移除預設 nginx 配置
RUN rm /etc/nginx/conf.d/default.conf

# 複製自定義 nginx 配置
COPY deploy/nginx/frontend.conf /etc/nginx/conf.d/

# 從建置階段複製建置結果
COPY --from=builder /app/dist /usr/share/nginx/html

# 建立非 root 使用者
RUN addgroup -g 1001 -S nginx && \
    adduser -S nginx -u 1001

# 設定權限
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /var/log/nginx && \
    chown -R nginx:nginx /etc/nginx/conf.d

# 切換到非 root 使用者
USER nginx

# 暴露埠號
EXPOSE 80

# 健康檢查
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:80 || exit 1

# 啟動 nginx
CMD ["nginx", "-g", "daemon off;"]
